$input-box-shadow: inset 0 1px 2px hsla(0,0%,4%,.1);
$input-box-shadow-focus: 0 0 5px rgba(_palette(interact, action), 0.7);

$input-base-border: 1px solid _palette(neutrals, mid-light);

fieldset {
  background-color: transparent;
  border: 0;
  margin: 0;
  padding: 0;
}

legend {
  font-weight: _font(base, weight-bold);
  margin-bottom: $small-spacing / 2;
  padding: 0;
}

label {
  display: block;
  font-weight: _font(base, weight-bold);
  cursor: pointer;
}

input,
select,
textarea {
  display: block;
  font-family: _font(base, family);
  font-size: $base-font-size;
}

#{$all-text-inputs} {
  appearance: none;
  background-color: _palette(neutrals, x-light);
  border: $input-base-border;
  border-radius: $base-border-radius;
  //box-shadow: $input-box-shadow;
  box-sizing: border-box;
  padding: $base-line-height / 3;
  width: 100%;
  background-color: red;
  //height: $base-line-height + 2 * ($base-line-height / 3);

  &:hover {
    border-color: _palette(neutrals, base);
    box-shadow: none;
  }

  &:focus {
    border-color: _palette(interact, action);
    box-shadow: $input-box-shadow-focus;
    outline: none;
    ~ .input-status {
      display: none;
    }
  }

  &:disabled {
    background-color: _palette(neutrals, light);
    cursor: not-allowed;

    &:hover {
      border: 1px solid _palette(neutrals, light);
    }
  }

  &::placeholder {
    color: _palette(neutrals, base);
  }
}

textarea {
  resize: vertical;
}

[type="checkbox"],
[type="radio"] {
  display: inline;
  margin-right: $small-spacing / 2;
}

[type="file"] {
  margin-bottom: $small-spacing;
  width: 100%;
}

select {
  width: 100%;
  padding: ($base-line-height / 3) ($base-line-height / 6);
  height: $base-line-height + 2 * ($base-line-height / 3);
  border-radius: $base-border-radius;
  border: $input-base-border;
  box-shadow: $input-box-shadow;
  line-height: $base-line-height;

  &:hover {
    border-color: _palette(neutrals, base);
    box-shadow: none;
  }

  &:focus {
    border-color: _palette(interact, action);
    box-shadow: $input-box-shadow-focus;
    outline: none;

    ~ .input-status {
      display: none;
    }
  }

  option {
    padding: 0;
    line-height: $base-line-height;
  }

  option[disabled] {
    color: _palette(neutrals, light);
  }

  option[default] {
    color: _palette(neutrals, base);
  }
}

.form-group {
  margin-bottom: $base-line-height / 1.5;
}

.input-wrapper {
  position: relative;
}

.input-label--pinned {
  position: absolute;
  right: ($base-line-height / 3);
  top: 0;
  height: $base-line-height + 2 * ($base-line-height / 3);
  color: _palette(neutrals, mid-dark);
  line-height: $base-line-height + 2 * ($base-line-height / 3);
}

.input-status {
  position: absolute;
  left: 0;
  top: 100%;
  background-color: _palette(neutrals, x-light);
  border: $base-border;
  font-size: .75rem;
  line-height: 120%;
  padding: 2px ($base-line-height / 4);
  border-radius: $base-border-radius;
  margin-top: -4px;
  box-shadow: $base-shadow;

  &:before {
    content: '';
    width: 6px;
    height: 6px;
    display: block;
    position: absolute;
    transform: rotate(45deg);
    border-top: $base-border;
    border-left: $base-border;
    background-color: _palette(neutrals, x-light);
    top: -4px;
    left: $base-line-height / 3;
  }

  &.has-error {
    border-color: darken(_palette(interact, error), 5%);
    background-color: _palette(interact, error);
    color: _palette(neutrals, light);
    &:before {
      border-color: darken(_palette(interact, error), 5%);
      background-color: _palette(interact, error);
    }
  }

  &.has-warning {
    border-color: darken(_palette(interact, warning), 5%);
    background-color: _palette(interact, warning);
    color: _palette(neutrals, light);
    &:before {
      border-color: darken(_palette(interact, warning), 5%);
      background-color: _palette(interact, warning);
    }
  }
}
